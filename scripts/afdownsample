#!/usr/bin/env bash
#
# afdownsample - audio file downsample
#
# Downsample high resolution audio files to 16 bit/44.1 kHz. Audio files with
# a bit depth of 24 and a sample rate greater than or equal to 44.1 kHz are
# seen as high resolution. The audio file formats AIFF, FLAC and WAV are
# supported.
#
# SoX (http://sox.sourceforge.net) is used as the sample rate converter.
#
# By default, high resolution audio files in the current working directory
# will be downsampled. Use the option -d to specify a directory that holds
# high resolution audio files. Downsampled files will be written to the
# directory OUT in the current working directory.

usage() {
  echo "usage: $PROG [-d directory] [-g] [-n]"
}

COUNT=0
CWD="$(pwd)"
DIR="."
DITHER=""
GAIN=""
PROG=${0##*/}

# Parse command line options.
OPTIND=1
while getopts :d:ghn OPT
do
  case $OPT in
    d)
      DIR=${OPTARG%/}
      ;;
    g)
      GAIN="gain -1"
      ;;
    h)
      usage
      echo
      echo "  -d  Directory with high resolution audio files"
      echo "  -g  Add some attenuation when clipping occurs during conversion"
      echo "  -n  Apply noise-shaping dither"
      exit 0
      ;;
    n)
      DITHER="dither -s"
      ;;
    \?)
      echo "${PROG}: illegal option -- $OPTARG"
      usage
      exit 1
      ;;
    :)
      echo "${PROG}: -${OPTARG} requires an argument"
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

if [[ $# -gt 0 ]]
then
  echo "${PROG}: illegal argument -- $1"
  usage
  exit 1
fi

# Check for sox.
command -v sox >/dev/null 2>&1 || { echo "${PROG}: sox: command not found"; exit 1; }

# Check if directory exists.
[[ -d "$DIR" ]] || { echo "${PROG}: ${DIR}: No such directory"; usage; exit 1; }

# Trap interrupt and remove incomplete downsampled file.
trap 'rm -rf "OUT/${file##*/}"; exit 3' SIGINT

# Only downsample high resolution audio files.
while IFS= read -r -d '' file
do
  if [[ $(sox --i -b "$file") -eq 24 ]] && [[ $(sox --i -r "$file") -ge 44100 ]]
  then
    if [[ $COUNT -eq 0 ]]
    then
      mkdir -p OUT || exit 1
    fi

    # Very high quality linear phase (-v -s).
    # SoX automatically applies TPDF dither when required.
    # Use the option -n to apply noise-shaping dither instead.
    # Use the option -g to add some attenuation when clipping occurs.
    sox -S "$file" -b 16 --comment "" OUT/"${file##*/}" $GAIN rate -v -s 44100 $DITHER || exit 2

    COUNT=$((COUNT+1))
  fi
done < <(find "$DIR" -depth 1 -type f \( -iname "*.aiff" -or -iname "*.aif" -or -iname "*.wav" -or -iname "*.flac" \) -print0)

if [[ $COUNT -eq 0 ]]
then
  echo "${PROG}: No high resolution audio files found"
fi
