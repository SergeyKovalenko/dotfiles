#!/usr/bin/env bash
#
# backup-itunes
#
# Incrementally backup the iTunes library with rsync.
# Assumes that the iTunes library is in its default location and all media
# files are located in the iTunes media folder.
#
# Requires rsync 3.1 because of options used in the `rsync` command.


usage() {
    echo "usage: $PROG [-n] [-v]"
    }


PROG=${0##*/}
RSYNC_OPTIONS=""

# Make sure to set the DST variable to the destination backup directory.
DST="/Volumes/Vault/Backup/${HOSTNAME}/"
SRC="/Users/${LOGNAME}/Music/iTunes"

# Parse command line options.
OPTIND=1
while getopts :nvh OPT; do
    case $OPT in
        n)
            RSYNC_OPTIONS+="--dry-run "
            ;;
        v)
            RSYNC_OPTIONS+="--verbose "
            ;;
        h)
            usage
            echo
            echo "  -n  Show what would have been backed up"
            echo "  -v  Increase verbosity"
            exit 0
            ;;
        \?)
            echo "$PROG: illegal option -- $OPTARG"
            usage
            exit 1
            ;;
        :)
            echo "$PROG: -$OPTARG requires an argument"
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [[ $# -gt 0 ]]; then
    echo "$PROG: illegal argument -- $1"
    usage
    exit 1
fi

# Check if required directories exist.
[[ -d "$SRC" ]] || { echo "${PROG}: ${SRC}: No such directory"; exit 1; }
[[ -d "$DST" ]] || { echo "${PROG}: ${DST}: No such directory"; exit 1; }

# Ensure that iTunes is not running.
if [[ "$(osascript -e 'tell application "System Events" to (name of processes) contains "iTunes"')" = "true" ]]; then
    echo "${PROG}: Quit iTunes before making a backup"
    exit 1
fi

# Backup.
rsync $RSYNC_OPTIONS \
    --archive \
    --delete \
    --delete-excluded \
    --exclude ".DS_Store" \
    --exclude "Cache/" \
    --hard-links \
    --acls \
    --hfs-compression \
    --protect-decmpfs \
    --prune-empty-dirs \
    --stats \
    --log-file=${HOME}/Library/Logs/${PROG}.log \
    "$SRC" "$DST"

if [[ $? -ne 0 ]]; then
    echo "${PROG}: rsync: Error $?"
    exit 1
fi
